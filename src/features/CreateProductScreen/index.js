import MDEditor from "@uiw/react-md-editor";
import AppButton from "general/components/AppButton";
import AppLabel from "general/components/AppLabel";
import AppSwitch from "general/components/AppSwitch";
import BaseDropdown from "general/components/BaseForm/BaseDropdown";
import BaseNumberField from "general/components/BaseForm/BaseNumberField";
import BaseTextArea from "general/components/BaseForm/BaseTextArea";
import BaseTextField from "general/components/BaseForm/BaseTextField";
import BaseLayout from "general/components/BaseLayout";
import Header from "general/components/Header";
import AppData from "general/constants/AppData";
import Utils from "general/utils/Utils";
import { useContext, useEffect, useState } from "react";
import MdEditor from "react-markdown-editor-lite";
import "react-markdown-editor-lite/lib/index.css";
import "./style.scss";
import BaseDropzone from "general/components/BaseDropzone";
import { useNavigate } from "react-router-dom";
import { AuthContext } from "AuthContext";
import SideBar from "general/components/SideBar";
import promptApi from "api/promptApi";

function CreateProductScreen(props) {
    const navigate = useNavigate();
    const { promptOptions, basePrompt } = useContext(AuthContext);
    const [filterPromptList, setFilterPromptList] = useState({});
    const [settingPrompt, setSettingPrompt] = useState(false);
    const [showMoreDescription, setShowMoreDescription] = useState(false);
    const [imagesProduct, setImagesProduct] = useState([]);
    const [clearImg, setClearImg] = useState(false);
    const [imagesProductInDesc, setImagesProductInDesc] = useState([]);
    const [isGenerating, SetIsGenerating] = useState(false);
    const [isGeneratingSeo, SetIsGeneratingSeo] = useState(false);
    const [selectCategoryPrompt, SetSelectCategoryPrompt] = useState("");
    const [filters, setFilters] = useState({
        name: "",
        page: 0,
        size: 5,
    });
    const [promptProduct, setPromptProduct] = useState({
        prompt: "",
        nameProduct: "",
        category: "",
        inforFroduct: "",
        imgProduct: [],
        otherRequirements: "",
    });
    const [productOnChange, setProductOnChange] = useState({
        category_id: null,
        name: "",
        code: "",
        description: "",
        images: [],
        seoTitle: "",
        seoDescription: "",
        price: "",
        quantity: "",
        sell: "",
    });
    const getImageProduct = (images) => {
        setImagesProduct(images);
    };

    const getImageInDescription = (images) => {
        setImagesProductInDesc(images);
    };

    useEffect(() => {
        async function fetchData() {
            const res = await promptApi.getAllPrompts(filters);
            if (res.result === "success") {
                console.log(res.data);
                setFilterPromptList(res.data);
            }
        }
        fetchData();
    }, [filters]);

    const handleUploadImage = async (files) => {
        let imagesList = [];
        if (files.length === 0) return;
        for (let i = 0; i < files.length; i++) {
            const res = await Utils.uploadCloudinary(files[i]);
            imagesList.push(res);
        }
        return imagesList;
    };
    const autoGenerateDescription = async () => {
        SetIsGenerating(true);
        const imagesList = await handleUploadImage(imagesProductInDesc);
        console.log(promptProduct);
        const response = await fetch(
            "https://backend-auto-generate-description.onrender.com/generate",
            {
                headers: {
                    "Content-Type": "application/json",
                },
                method: "POST",
                body: JSON.stringify({
                    prompt: JSON.stringify({
                        ...promptProduct,
                        imgProduct: imagesList,
                    }),
                    ...AppData.settingValueDefault,
                }),
            }
        );

        if (!response.body) return;
        const reader = response.body.getReader();
        console.log(reader);
        let valueDesc = "";
        while (true) {
            let { value } = await reader.read();
            if (new TextDecoder().decode(value) === "DONE") {
                SetIsGenerating(false);
                break;
            }
            valueDesc += new TextDecoder().decode(value);
            console.log(new TextDecoder().decode(value));
            setProductOnChange({ ...productOnChange, description: valueDesc });
        }
    };
    const autoGenerateSeo = async () => {
        SetIsGeneratingSeo(true);
        console.log({
            prompt: `${basePrompt.promptSEO};
            sản phẩm: ${promptProduct.nameProduct}; 
            danh mục: ${promptProduct.category}`,
        });
        const response = await fetch(
            "https://backend-auto-generate-description.onrender.com/generate",
            {
                headers: {
                    "Content-Type": "application/json",
                },
                method: "POST",
                body: JSON.stringify({
                    prompt: `${basePrompt.promptSEO};
                sản phẩm: ${promptProduct.nameProduct}; 
                danh mục: ${promptProduct.category}`,
                    ...AppData.settingValueDefault,
                }),
            }
        );
        if (!response.body) return;
        const reader = response.body.getReader();
        let valueSeoTitle = "";
        let valueSeoDescription = "";
        let titleStream = false;
        let descStream = false;
        while (true) {
            let { value } = await reader.read();
            if (new TextDecoder().decode(value) === "DONE") {
                {
                    SetIsGeneratingSeo(false);
                    break;
                }
            }
            if (new TextDecoder().decode(value) === "Title") {
                titleStream = true;
                continue;
            }
            if (new TextDecoder().decode(value) === "Description") {
                titleStream = false;
                descStream = true;
                continue;
            }
            if (new TextDecoder().decode(value) === ":") {
                continue;
            }
            if (titleStream) {
                valueSeoTitle += new TextDecoder().decode(value);
            }
            if (descStream) {
                valueSeoDescription += new TextDecoder().decode(value);
            }
            setProductOnChange({
                ...productOnChange,
                seoTitle: valueSeoTitle,
                seoDescription: valueSeoDescription,
            });
        }
    };

    const resetData = () => {
        setPromptProduct({
            prompt: "",
            nameProduct: "",
            category: "",
            inforFroduct: "",
            imgProduct: [],
            otherRequirements: "",
        });
        setProductOnChange({
            category_id: null,
            name: "",
            code: "",
            description: "",
            images: [],
            seoTitle: "",
            seoDescription: "",
            price: "",
            quantity: "",
            sell: "",
        });
        SetSelectCategoryPrompt("");
        setClearImg(!clearImg);
    };

    const handleChange = ({ html, text }) =>
        setProductOnChange({
            ...productOnChange,
            description: text,
        });
    async function onImageUpload(file) {
        console.log(file);
        const image = await Utils.uploadCloudinary(file);
        return image;
    }
    return (
        <div className="d-flex w-100">
            <div>
                <SideBar selected="create-product" />
            </div>
            <div className="d-flex flex-column flex-grow-1">
                <Header>
                    {/* Code header ở đây */}
                    <div className="d-flex w-100 justify-content-between align-items-center">
                        <h5 className="w-100 m-0 text-center">
                            TRANG THÊM SẢN PHẨM
                        </h5>

                        <div className="d-flex align-items-center">
                            <AppButton
                                onClick={resetData}
                                className="btn-cancel me-3"
                                text="Hủy"
                            />
                        </div>
                    </div>
                </Header>
                <BaseLayout>
                    {/* Code layout ở đây */}
                    <div className="row">
                        <div className="col-12 col-lg-8">
                            <div className="card bg-white">
                                <div className="card-header">
                                    <div className="card-title py-3 px-4 m-0">
                                        <div className="m-0">
                                            Thông tin chung
                                        </div>
                                    </div>
                                </div>
                                <div className="card-body row p-4">
                                    <div className="col-12 mb-3">
                                        <BaseTextField
                                            name="nameProduct"
                                            label="Tên sản phẩm"
                                            require={true}
                                            placeholder="Nhập tên sản phẩm"
                                            value={promptProduct.nameProduct}
                                            onChange={(e) => {
                                                setPromptProduct({
                                                    ...promptProduct,
                                                    nameProduct: e.target.value,
                                                });
                                            }}
                                        />
                                    </div>
                                    <div className="col-6">
                                        <BaseTextField
                                            name="codeProduct"
                                            label="Mã sản phẩm"
                                            placeholder="Nhập mã sản phẩm"
                                            value={productOnChange.code}
                                            onChange={(e) =>
                                                setProductOnChange({
                                                    ...productOnChange,
                                                    code: e.target.value,
                                                })
                                            }
                                        />
                                    </div>
                                    <div className="col-6">
                                        <BaseDropdown
                                            options={AppData.categoryOptions}
                                            name="category"
                                            require={true}
                                            label="Loại sản phẩm"
                                            dropdownInitialValue="Chọn loại sản phẩm"
                                            value={promptProduct.category}
                                            onValueChanged={(value) =>
                                                setPromptProduct({
                                                    ...promptProduct,
                                                    category: value,
                                                })
                                            }
                                        />
                                    </div>
                                </div>
                            </div>
                            <div className="card bg-white mt-4">
                                <div className="card-header">
                                    <div className="card-title d-flex justify-content-between py-3 px-4 m-0">
                                        <div className="m-0">
                                            Mô tả sản phẩm
                                        </div>
                                        <div className="wrapper-desc">
                                            <input
                                                type="checkbox"
                                                name="select"
                                                id="option-2"
                                                checked={settingPrompt}
                                                onChange={() => {
                                                    if (
                                                        settingPrompt === true
                                                    ) {
                                                        setShowMoreDescription(
                                                            false
                                                        );
                                                    }
                                                    setSettingPrompt(
                                                        !settingPrompt
                                                    );
                                                }}
                                            />
                                            <label
                                                htmlFor="option-2"
                                                className="option option-2"
                                            >
                                                <div className="dot"></div>
                                                <span>
                                                    Mô tả tự động bằng AI
                                                </span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div className="card-body row p-4">
                                    <div className="col-12 mb-3">
                                        {settingPrompt && (
                                            <div className="setting-prompt-wrapper">
                                                <div className=" row mb-4 d-flex justify-content-between">
                                                    <div className="col-12">
                                                        <BaseDropdown
                                                            name="categoryPrompt"
                                                            label="Gợi ý dành cho danh mục"
                                                            require={true}
                                                            popover={true}
                                                            popoverText="Lựa chọn loại danh mục phù hợp nhất với sản phẩm để trợ giúp AI mô tả sản phẩm và SEO"
                                                            dropdownInitialValue="Danh mục"
                                                            searchInputAndPagination={
                                                                true
                                                            }
                                                            searchName="searchPromptDropDown"
                                                            searchPlaceholder="Tìm kiếm theo tên"
                                                            searchValue={
                                                                filters.name
                                                            }
                                                            onSubmitSearch={(
                                                                value
                                                            ) => {
                                                                setFilters({
                                                                    ...filters,
                                                                    name: value,
                                                                    page: 0,
                                                                });
                                                            }}
                                                            textPagination={`Kết quả hiện thị: ${
                                                                filters.page *
                                                                    5 +
                                                                1
                                                            } - ${
                                                                filters.page *
                                                                    5 +
                                                                    5 >
                                                                filterPromptList?.totalElements
                                                                    ? filterPromptList?.totalElements
                                                                    : filters.page *
                                                                          5 +
                                                                      5
                                                            } trong tổng số ${
                                                                filterPromptList?.totalElements
                                                            } lựa chọn`}
                                                            onPrevPage={() => {
                                                                filters.page >
                                                                    0 &&
                                                                    setFilters({
                                                                        ...filters,
                                                                        page:
                                                                            filters.page -
                                                                            1,
                                                                    });
                                                            }}
                                                            disabledPrevBtn={
                                                                filters.page ===
                                                                0
                                                            }
                                                            onNextPage={() => {
                                                                filters.page <
                                                                    filterPromptList.totalPages -
                                                                        1 &&
                                                                    setFilters({
                                                                        ...filters,
                                                                        page:
                                                                            filters.page +
                                                                            1,
                                                                    });
                                                            }}
                                                            disabledNextBtn={
                                                                filters.page ===
                                                                filterPromptList.totalPages -
                                                                    1
                                                            }
                                                            options={Utils.toOption(
                                                                filterPromptList?.promptList
                                                            )}
                                                            value={
                                                                selectCategoryPrompt
                                                            }
                                                            onValueChanged={(
                                                                value
                                                            ) => {
                                                                SetSelectCategoryPrompt(
                                                                    value
                                                                );
                                                                setPromptProduct(
                                                                    {
                                                                        ...promptProduct,
                                                                        prompt: `${value}`,
                                                                    }
                                                                );
                                                            }}
                                                        />
                                                    </div>
                                                </div>
                                                <div className="row mb-3 d-flex justify-content-end">
                                                    <div className="d-flex align-items-center mb-2">
                                                        <AppLabel
                                                            htmlFor="AppSwitch"
                                                            text="Chi tiết về sản phẩm"
                                                            popover={true}
                                                            popoverText="Viết thêm các chi tiết về sản phẩm để có mô tả về sản phẩm ưng ý nhất"
                                                        />
                                                        <AppSwitch
                                                            className="ms-4"
                                                            checked={
                                                                showMoreDescription
                                                            }
                                                            onChange={() =>
                                                                setShowMoreDescription(
                                                                    !showMoreDescription
                                                                )
                                                            }
                                                        />
                                                    </div>
                                                    {showMoreDescription && (
                                                        <div className="row">
                                                            <div className="col-3 mb-3 label-muted">
                                                                Thông tin chi
                                                                tiết
                                                            </div>
                                                            <div className="col-9 mb-3">
                                                                <BaseTextArea
                                                                    name="insertPromptInput"
                                                                    placeholder="Nhập các thông tin chi tiết về sản phẩm. VD: Thông số kỹ thuật, màu sắc, kích cỡ, khối lượng,..."
                                                                    value={
                                                                        promptProduct.inforFroduct
                                                                    }
                                                                    onChange={(
                                                                        e
                                                                    ) => {
                                                                        setPromptProduct(
                                                                            {
                                                                                ...promptProduct,
                                                                                inforFroduct:
                                                                                    e
                                                                                        .target
                                                                                        .value,
                                                                            }
                                                                        );
                                                                    }}
                                                                />
                                                            </div>
                                                            <div className="col-3 mb-3 label-muted">
                                                                Ảnh sản phẩm
                                                            </div>
                                                            <div className="col-9 mb-3">
                                                                <BaseDropzone
                                                                    isClear={
                                                                        clearImg
                                                                    }
                                                                    parentCallback={
                                                                        getImageInDescription
                                                                    }
                                                                />
                                                            </div>
                                                            <div className="col-3 mb-3 label-muted">
                                                                Yêu cầu khác
                                                            </div>
                                                            <div className="col-9 mb-3">
                                                                <BaseTextArea
                                                                    name="insertOtherRequirements"
                                                                    placeholder="Thêm các yêu cầu khác. VD: Mô tả dành cho đối tượng trẻ,..."
                                                                    value={
                                                                        promptProduct.otherRequirements
                                                                    }
                                                                    onChange={(
                                                                        e
                                                                    ) => {
                                                                        setPromptProduct(
                                                                            {
                                                                                ...promptProduct,
                                                                                otherRequirements:
                                                                                    e
                                                                                        .target
                                                                                        .value,
                                                                            }
                                                                        );
                                                                    }}
                                                                />
                                                            </div>
                                                        </div>
                                                    )}
                                                </div>
                                            </div>
                                        )}
                                        {settingPrompt && (
                                            <div className="d-flex justify-content-end mb-3">
                                                <AppButton
                                                    width="9rem"
                                                    className="btn-blue h-100"
                                                    beforIcon={
                                                        isGenerating ? (
                                                            <div className="custom-loader-1"></div>
                                                        ) : (
                                                            <></>
                                                        )
                                                    }
                                                    disabled={
                                                        isGeneratingSeo === true
                                                    }
                                                    text={
                                                        isGenerating
                                                            ? ""
                                                            : "Mô tả tự động"
                                                    }
                                                    onClick={
                                                        autoGenerateDescription
                                                    }
                                                />
                                            </div>
                                        )}
                                        <div className="mb-3">
                                            <label
                                                className="label-muted"
                                                htmlFor="descriptionProduct"
                                            >
                                                Mô tả sản phẩm
                                            </label>
                                            <MdEditor
                                                id="descriptionProduct"
                                                view={{ html: false }}
                                                canView={{ fullScreen: false }}
                                                onImageUpload={onImageUpload}
                                                allowPasteImage={true}
                                                placeholder="Nhập mô tả sản phẩm tại đây..."
                                                style={{
                                                    minHeight: "300px",
                                                    maxHeight: "600px",
                                                }}
                                                renderHTML={(text) => (
                                                    <MDEditor.Markdown
                                                        source={text}
                                                    />
                                                )}
                                                value={
                                                    productOnChange.description
                                                }
                                                onChange={handleChange}
                                            />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div className="card bg-white mt-4">
                                <div className="card-header">
                                    <div className="card-title d-flex justify-content-between py-3 px-4 m-0">
                                        <div className="m-0">SEO sản phẩm</div>
                                        {settingPrompt && (
                                            <div className="d-flex justify-content-end">
                                                <AppButton
                                                    width="9rem"
                                                    className="btn-blue h-100"
                                                    beforIcon={
                                                        isGeneratingSeo ? (
                                                            <div className="custom-loader-1"></div>
                                                        ) : (
                                                            <></>
                                                        )
                                                    }
                                                    disabled={
                                                        isGenerating === true
                                                    }
                                                    text={
                                                        isGeneratingSeo
                                                            ? ""
                                                            : "SEO tự động"
                                                    }
                                                    onClick={autoGenerateSeo}
                                                />
                                            </div>
                                        )}
                                    </div>
                                </div>
                                <div className="card-body row p-4">
                                    <label
                                        className="col-2 label-muted"
                                        htmlFor="titleSEO"
                                    >
                                        Tiêu đề
                                    </label>
                                    <div className="col-10">
                                        <BaseTextArea
                                            name="titleSEO"
                                            rows={3}
                                            placeholder="Nhập tiêu đề SEO sản phẩm"
                                            value={productOnChange.seoTitle}
                                            onChange={(e) =>
                                                setProductOnChange({
                                                    ...productOnChange,
                                                    seoTitle: e.target.value,
                                                })
                                            }
                                        />
                                    </div>
                                    <label
                                        className="col-2 label-muted mt-4"
                                        htmlFor="descriptionSEO"
                                    >
                                        Mô tả
                                    </label>
                                    <div className="col-10 mt-4">
                                        <BaseTextArea
                                            name="descriptionSEO"
                                            rows={6}
                                            placeholder="Nhập mô tả SEO sản phẩm"
                                            value={
                                                productOnChange.seoDescription
                                            }
                                            onChange={(e) =>
                                                setProductOnChange({
                                                    ...productOnChange,
                                                    seoDescription:
                                                        e.target.value,
                                                })
                                            }
                                        />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div className="col-12 col-lg-4">
                            <div className="card bg-white mt-4 m-lg-0">
                                <div className="card-header">
                                    <div className="card-title py-3 px-4 m-0">
                                        <div className="m-0">Ảnh sản phẩm</div>
                                    </div>
                                </div>
                                <div className="card-body p-4">
                                    <BaseDropzone
                                        isClear={clearImg}
                                        parentCallback={getImageProduct}
                                    />
                                </div>
                            </div>
                            <div className="card bg-white mt-4">
                                <div className="card-header">
                                    <div className="card-title py-3 px-4 m-0">
                                        <div className="m-0">Giá sản phẩm</div>
                                    </div>
                                </div>
                                <div className="card-body p-4">
                                    <div>
                                        <BaseNumberField
                                            name="priceProduct"
                                            label="Giá sản phẩm"
                                            placeholder="Nhập giá sản phẩm"
                                            value={productOnChange.price}
                                            onChange={(e) =>
                                                setProductOnChange({
                                                    ...productOnChange,
                                                    price: e.target.value,
                                                })
                                            }
                                        />
                                    </div>
                                </div>
                            </div>
                            <div className="card bg-white mt-4">
                                <div className="card-header">
                                    <div className="card-title py-3 px-4 m-0">
                                        <div className="m-0">
                                            Thông tin bổ sung
                                        </div>
                                    </div>
                                </div>
                                <div className="card-body p-4">
                                    <div>
                                        <BaseNumberField
                                            name="quantityProduct"
                                            label="Số lượng sản phẩm"
                                            placeholder="Nhập số lượng sản phẩm"
                                            value={productOnChange.quantity}
                                            onChange={(e) =>
                                                setProductOnChange({
                                                    ...productOnChange,
                                                    quantity: e.target.value,
                                                })
                                            }
                                        />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </BaseLayout>
            </div>
        </div>
    );
}

CreateProductScreen.propTypes = {};

export default CreateProductScreen;
